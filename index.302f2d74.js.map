{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAC9B,EAAO,SAAS,gBAAgB,CAAC,MAElC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAc,CAAA,CAAA,OAAA,QAAA,CAAA,GAAd,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAoB,CAApB,IAAM,EAAN,EAAA,KAAA,CACG,EAAO,SAAS,aAAa,CAAC,QAEpC,EAAK,OAAO,CAAC,GACb,EAAK,MAAM,CAAC,EAAK,WAAW,CAC9B,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOL,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,EACE,GAAI,AAA0B,SAA1B,EAAO,MAAM,CAAC,OAAO,CAAa,CACpC,IAAM,EAAW,EAAO,MAAM,CAAC,WAAW,CAEtC,GACF,CAAA,EAAS,MAAM,CAAG,CAAC,EAAS,MAAM,AAAN,CAEhC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar tree = document.querySelector(\".tree\");\nvar list = document.querySelectorAll(\"li\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var item = _step.value;\n        var span = document.createElement(\"span\");\n        item.prepend(span);\n        span.append(span.nextSibling);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\ntree.addEventListener(\"click\", function(action) {\n    if (action.target.tagName === \"SPAN\") {\n        var children = action.target.nextSibling;\n        if (children) children.hidden = !children.hidden;\n    }\n});\n\n//# sourceMappingURL=index.302f2d74.js.map\n","'use strict';\n\nconst tree = document.querySelector('.tree');\nconst list = document.querySelectorAll('li');\n\nfor (const item of list) {\n  const span = document.createElement('span');\n\n  item.prepend(span);\n  span.append(span.nextSibling);\n}\n\ntree.addEventListener('click', (action) => {\n  if (action.target.tagName === 'SPAN') {\n    const children = action.target.nextSibling;\n\n    if (children) {\n      children.hidden = !children.hidden;\n    }\n  }\n});\n"],"names":["tree","document","querySelector","list","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","item","value","span","createElement","prepend","append","nextSibling","err","return","addEventListener","action","target","tagName","children","hidden"],"version":3,"file":"index.302f2d74.js.map"}